import Head from 'next/head'
import { useQuery } from '@tanstack/react-query'
import Table from 'react-bootstrap/Table'
import { useState } from 'react'
import styles from '@/styles/Home.module.css'
import fetcher from '@/utils/fetcher'
import { SeasonSchedule } from '@/types/SeasonSchedule'
import TableRow from '@/features/table/components/TableRow'
import 'bootstrap/dist/css/bootstrap.min.css'
import DropdownMenu from '@/features/table/components/DropdownMenu'
import { CurrentSeasonType } from '@/types/CurrentSeason'

export default function Home() {
  const [currentSeason, setCurrentSeason] = useState<CurrentSeasonType>({
    id: 'sr:season:77453',
    name: 'Ekstraklasa 20/21',
  })
  const { data, isLoading } = useQuery(
    ['seasonschedule', currentSeason],
    async () => fetcher<SeasonSchedule>(`/api/season/${currentSeason.id}`)
  )
  const handleClick = ({ id, name }: CurrentSeasonType) => {
    setCurrentSeason({ id, name })
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <DropdownMenu func={handleClick} currentSeason={currentSeason} />
        <Table striped bordered hover>
          <thead>
            <tr>
              <th>Match date</th>
              <th>Stadium name</th>
              <th>Team Home</th>
              <th>Team Away</th>
              <th>Half-time score</th>
              <th>Results</th>
            </tr>
          </thead>
          <tbody>
            {!isLoading && data ? (
              data.schedules.map((elem) => {
                return (
                  <TableRow
                    date={elem.sport_event.start_time}
                    stadium={elem.sport_event.venue.name}
                    team1={elem.sport_event.competitors[0].name}
                    team2={elem.sport_event.competitors[1].name}
                    halftime={elem.sport_event_status.period_scores}
                    result={elem.sport_event_status}
                    key={crypto.randomUUID()}
                  />
                )
              })
            ) : (
              <tr>
                <td rowSpan={6}>Loading...</td>
              </tr>
            )}
          </tbody>
        </Table>
      </main>
    </>
  )
}
